#! /bin/sh
set -o nounset -o xtrace
VERSION=1.9.1

# including a hack similar QA_SKIP_BUILD_ROOT see /usr/lib/rpm/check-buildroot
destdir=/tmp\/rpmize
spec=${destdir}.spec
rm --force ${spec}
boundary=$'\n__RPMIZE__\n'

function rpmquery
{
  local rpm=$1 format=${2:-''} result
  test -f "${rpm}" && rpm="--package ${rpm}"
  result=$(LANG=C rpm --query --queryformat=${format} ${rpm})
  (($?)) && return 1
  echo "${result}"
  return 0
}

#----------------------------------------------------------------------
# estimate default values
#----------------------------------------------------------------------
if (($# != 0))
then
  dirname="${1##*/}"
  cd $(rpm --eval '%_buildrootdir')
else
  dirname=${PWD##*/}
fi

package=$(echo -n ${dirname} | sed --expression='s/-v\?[0-9.]*$//')
version=${dirname#${package}}
version=${version#-}
version=${version#v}

name=rpmized-${package}
rpm=''
if $(rpmquery ${name})
then
  # There is rpmized package installed.
  rpm=${name}
elif $(rpmquery ${package})
then
  # There is none-rpmized package installed.
  rpm=${package}
  release=0
fi

if test -n "${rpm}"
then
  # Extract variables from the rpm package for each unset variable.
  if test "${version}" != "$(rpmquery ${rpm} '%{VERSION}')"
  then
    release=0
  fi
  version="${version:-$(rpmquery ${rpm} '%{VERSION}')}"
  release="${release:-$(rpmquery ${rpm} '%{RELEASE}')}" ; release=${release//[^0-9]/} ; release=$((${release:-0} + 1))
  summary="${summary:-$(rpmquery ${rpm} '%{SUMMARY}')}"
  license="${license:-$(rpmquery ${rpm} '%{LICENSE}')}"
  description="${description:-$(rpmquery ${rpm} '%{DESCRIPTION}')}"
else
  # default values
  version=${version:-0.0.0}
  release=1
  summary="Package ${name} created with rpmize"
  license=MIT
  description="Package ${name} created with rpmize"
fi

#----------------------------------------------------------------------
# edit sections
#----------------------------------------------------------------------
# using `%#' for escape rpm macro because `#%%' is usually used.
sections=${description#*${boundary}}
if test "$sections" = "$description"
then
  sections="%#install
%#configure
%#make_install"
else
  description=${description%%${boundary}${sections}}
fi
sections=${sections//%#/%}
echo "${sections}" 1>${spec}
${EDITOR} ${spec}
sections=$(cat ${spec})
description=${description}${boundary}${sections//%/%#}

#----------------------------------------------------------------------
# create spec file
#----------------------------------------------------------------------
cat - <<EOF | tee ${spec}
%define _builddir ${PWD}
%define _prefix /usr/local
%define __perl_provides %{nil}
%define __perl_requires %{nil}
%define _infodir %{_prefix}/share/info
%define _mandir %{_prefix}/share/man
%define _sysconfdir %{_prefix}/etc
%define _localstatedir %{_prefix}/var
%define __spec_install_pre %{___build_pre}
%define make_install make install DESTDIR=%{?buildroot}
%define __urlhelpercmd /usr/bin/curl
%define __urlhelperopts --silent --show-error --fail --location -o
%define __urlhelper_proxyopts %{?_httpproxy:--proxy %{_httpproxy}%{?_httpport::%{_httpport}}}%{!?_httpproxy:%{nil}}
%define _urlhelper %{__urlhelpercmd} %{?__urlhelper_localopts} %{?__urlhelper_proxyopts} %{__urlhelperopts}

Name: ${name}
Version: ${version}
Release: ${release}
Summary: ${summary}
License: ${license}
Group: Development/Tools
%description
${description}
${sections}
%files
%defattr(-,root,root,-)
EOF
# You can modify the spec if you want.
${EDITOR} ${spec}

#----------------------------------------------------------------------
# do install
#----------------------------------------------------------------------
if test -d "${destdir}"
then
  echo -n "May I use ${destdir}?[y/N]"
  read
  if ! [[ "${REPLY}" =~ ^([Yy]([Ee][Ss])?)$ ]]
  then
    rm --force --recursive ${destdir}
  fi
fi
if test ! -d "${destdir}"
then
  sed --expression='1s/^/%define __check_files %{nil}\n/' --in-place ${spec}
  rpmbuild --buildroot=${destdir} -bi ${spec} || exit
  sed --silent --expression='/^%define __check_files %{nil}$/!p' --in-place ${spec}
fi

#----------------------------------------------------------------------
# extract %files section automatically
#----------------------------------------------------------------------
info=''
function put_entry()
{
  command=''
  if ((1 < $#))
  then
    command="$1 "
    shift
  fi
  echo "${command}${1//[^*\-.\/0-9:A-Z_a-z]/?}"
}
IFS=$'\n'
for entry in $(find ${destdir}/)
do
  entry="${entry#${destdir}}"

  if test -d "${destdir}${entry}"
  then # entry is directory
    if test -d "${entry}"
    then # entry already exists on the system
      owning=$(rpm --query --file "${entry}")
      if test "${owning##${name}}" = "${owning}"
      then # do nothing if it is not mine
        put_entry '#%dir' "${entry}"
        continue
      fi
    fi
    put_entry '%dir' "${entry}"
  else # entry is file
    case "${entry}" in
      # TODO: */man[0-9]/*) entry="${entry%%.gz}" ; put_entry "${entry}" ;;
      # TODO: %config
      INSTALL|NEWS|README|AUTHORS|ChangeLog|COPYING.LIB|COPYING.LESSER|COPYING)
        put_entry '%doc' "${entry}"
        ;;
      */share/info/dir)
        put_entry '%exclude' "${entry}"
        ;;
      */share/info/*.info*)
        entry="${entry%.gz}"
        entry="${entry%.bz2}"
        info+=$'\n'"  /sbin/install-info@OPTION@ "'"'"${entry}"'"'" %{_infodir}/dir"
        put_entry "${entry}*"
        ;;
      *)
        put_entry "${entry}"
        ;;
    esac
  fi
done 1>>${spec}

if test "${info}" != ''
then
  # TODO: Prereq: install-info
  cat - <<EOF 1>>${spec}
%post
if test "\$1" = "1"
then${info//@OPTION@/}
fi
%preun
if test "\$1" = "0"
then${info//@OPTION@/ --delete}
fi
EOF
fi

chmod -w ${spec}
${EDITOR} ${spec}

#----------------------------------------------------------------------
# build rpm
#----------------------------------------------------------------------
# Skip with hacks because it is already installed into DESTDIR.
sed --expression='s/^%\(prep\|build\|install\)/%\1\nexit/g' --in-place ${spec}
rpmbuild --buildroot=${destdir} --rmspec -bb ${spec} && rm --force --recursive ${destdir}
